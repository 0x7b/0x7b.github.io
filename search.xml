<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/posts/520520/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>克隆账户</title>
    <url>/posts/34255/</url>
    <content><![CDATA[<p><strong>1.克隆账号的原理</strong><br>　　在 注册表中有两处保存了账号的 SID 相对标志符，一处是注册表 HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users 下的子键名，另一处是该子键的子项 F 的值。但微软犯了个不同步它们的错误，登录时用的是后者，查询时用前者。当用 Administrator 的 F 项覆盖其他账号的 F 项后，就造成了账号是管理员权限，但查询还是原来状态的情况，这就是所谓的克隆账号。<br>　　安全小知识：SID 也就是安全标识符（Security Identifiers），是标识用户、组和 计算机账户的唯一的号码。在第一次创建该账户时，将给网络上的每一个账户发布一个唯一的 SID。Windows 2000 中的内部进程将引用账户的 SID 而不是账户的用户或组名。如果创建账户，再删除账户，然后使用相同的   用户名创建另一个账户，则新账户将不具有授权给前一个账户的权力或权限，原因是该账户具有不同的 SID 号。<br><strong>2. 克隆账号的危害</strong><br>　　当 系统用户一旦被克隆，配合终端服务，就等于向攻击者开启了一扇隐蔽的后门，让攻击者可以随时进入你的系统，这一扇门你看不到,因为它依靠的是微软的终端服务，并没有释放病毒文件，所以也不会被杀毒 软件所查杀。<br><strong>3.克隆账号的常用方法</strong><br>① 使用工具克隆<br>首先创建一个用户，或者知道亦或者是能修改其他账户（如 guest）的密码<img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209253922-4dbf07b4-683a-4321-931b-7c10ef8af618.png#align=left&display=inline&height=28&margin=%5Bobject%20Object%5D&name=image.png&originHeight=40&originWidth=1059&size=8079&status=done&style=none&width=746" alt="image.png"><br>创建用户一般用的都是 net.exe，但有时候种种条件限制的时候我们可以使用 net1.exe。其实本质都是调用的 net1.exe。还不可以的话，我们可以用 copy 命令将 C:/Windows/System32/net1.exe 复制到其他地方并且改名。<br>如：copy C:/Windows/System32 1.exe 会把 C:/Windows/System32 复制到当前目录的 1.exe。就可以绕过一些只检测调用特定文件（如 C:/Windows/System32/net.exe）的 waf。<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209564784-aa91482b-d61f-49da-b17d-da99200e7191.png#align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&name=image.png&originHeight=65&originWidth=810&size=8092&status=done&style=none&width=746" alt="image.png">然后就可以通过 1.exe 执行命令了<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209590521-889a74e3-0b43-4e4d-a28e-273fcde3c536.png#align=left&display=inline&height=487&margin=%5Bobject%20Object%5D&name=image.png&originHeight=505&originWidth=767&size=29304&status=done&style=none&width=740" alt="image.png"><br>上传 clone.exe，克隆账户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Usage: clone.exe UserName Password   &#x2F;Add</span><br><span class="line">Usage: clone.exe UserName ClonedUser &#x2F;Clone</span><br></pre></td></tr></table></figure>

<p>克隆完成<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209691323-567261e4-a5ef-4d54-b110-6c934cd79167.png#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&name=image.png&originHeight=156&originWidth=808&size=12216&status=done&style=none&width=746" alt="image.png"><br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209709019-97fb9754-fe0a-41a1-bddf-efff42aaf40c.png#align=left&display=inline&height=180&margin=%5Bobject%20Object%5D&name=image.png&originHeight=187&originWidth=777&size=13487&status=done&style=none&width=746" alt="image.png"><br>可通过克隆账户登录目标主机，登录后依然是克隆对象的身份<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209735028-cfcfa613-45dc-43a1-a68e-790048dc3531.png#align=left&display=inline&height=428&margin=%5Bobject%20Object%5D&name=image.png&originHeight=439&originWidth=765&size=44721&status=done&style=none&width=746" alt="image.png"><br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209765824-bfd6b96d-ec78-4b91-961f-91f18b1ad77b.png#align=left&display=inline&height=533&margin=%5Bobject%20Object%5D&name=image.png&originHeight=753&originWidth=1053&size=426381&status=done&style=none&width=746" alt="image.png"><br>② 通过 powershell 的 ps 脚本克隆<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209787259-797f4a9f-625f-4fff-98a0-55b4894b7cd0.png#align=left&display=inline&height=353&margin=%5Bobject%20Object%5D&name=image.png&originHeight=388&originWidth=821&size=31068&status=done&style=none&width=746" alt="image.png"><br>③ 手工修改注册表键值克隆<br><strong>简单克隆。</strong><br>手动将 HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\000001F4 下的 F 键值复制到克隆账户的 F 值<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209802616-4c222ce1-cbd8-4640-bc64-8f538f95b1ae.png#align=left&display=inline&height=401&margin=%5Bobject%20Object%5D&name=image.png&originHeight=645&originWidth=1198&size=163440&status=done&style=none&width=744" alt="image.png"><br>复制方法有很多可以直接在注册表中编辑克隆账户的 F 键值。也可以导出注册表再编辑好了然后再导入。<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209814034-b829e18e-8901-408d-8547-79ed4a0b8d51.png#align=left&display=inline&height=423&margin=%5Bobject%20Object%5D&name=image.png&originHeight=820&originWidth=1446&size=369440&status=done&style=none&width=746" alt="image.png"><br>复制完保存，双击 000003EB.reg 导入就可以了（须先删除原克隆账户 walker$）<br>如下图可查看对应账户的SID<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209830671-949757e1-e65f-49e7-a39c-b4159d96ea26.png#align=left&display=inline&height=407&margin=%5Bobject%20Object%5D&name=image.png&originHeight=652&originWidth=1196&size=102921&status=done&style=none&width=746" alt="image.png"><br>但这样只是简单克隆即你克隆出来的账户和被克隆账户是两个不同的账户。quser一查询当前登录用户依然是克隆账户即walker$，即你只是克隆了 administrator 的权限。还有就是用命令“net localgroup administrators”还是可以看出 Guest 是管理员来，这就是我所说的隐蔽性比完全克隆要低些。<br><strong>完全克隆</strong><br>完全克隆账户就是将 Administrator（默认 SID 是 500 即 0X1F4）的 F 键值和 V 键值都复制到克隆账户（walker$）的对应值里。同样可以直接在注册表修改，<br>也可以通过导出注册表修改再导入<br><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/png/8398873/1608209844695-773e62aa-227b-4e86-8e37-f4a78c19ad45.png#align=left&display=inline&height=450&margin=%5Bobject%20Object%5D&name=image.png&originHeight=550&originWidth=911&size=129655&status=done&style=none&width=746" alt="image.png"><br>直接将000001F4改为克隆账户的SID然后又导入（修改好后cmd删除克隆账户再导入），方便快捷。<br>这样的方法克隆出来的账户（walker$）和被克隆账户（administrator）实际上是 1 个账户，这样隐蔽性最高，除非用专业工具查看，否则在 net 和用户管理中，还有“net localgroup administrators”都看不出有什么问题来。还有最重要的一点，如果你登陆上去后，在“query user”和“终端服务管理器”里面你所登陆的用户上面显示的是“administrator”。</p>
]]></content>
      <categories>
        <category>后渗透</category>
      </categories>
      <tags>
        <tag>权限维持</tag>
        <tag>后门</tag>
      </tags>
  </entry>
  <entry>
    <title>CDN下访问源站ERR_TOO_MANY_REDIRECTS</title>
    <url>/posts/8611/</url>
    <content><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>源站（GitHub pages）使用了 CDN，浏览器访问提示重定向过多</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XXX.XXX.XXX 将您重定向的次数过多。</span><br><span class="line">尝试清除 Cookie.</span><br><span class="line">ERR_TOO_MANY_REDIRECTS</span><br></pre></td></tr></table></figure>

<h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>Github Pages 开启了 Enforce HTTPS，且 CDN 中回源协议为 HTTP。此时客户端无论通过哪种协议访问源站的 CDN 加速域名，CDN 都会以 HTTP 协议回源。而源站因为 Enforce HTTPS 的存在返回 301 永久重定向强制要求 CDN 重新以 HTTPS 访问，但 CDN 下次依旧会发送 HTTP 请求。以此往复，就会出现以下情况<br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/0x7b/CDN/img/20201224161640.png" alt="image"></p>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ul>
<li>关闭源站强制 HTTPS 跳转功能</li>
<li>在 CDN 管理控制台配置回源协议为 HTTPS，或协议跟随（腾讯云，其他 CDN 厂商同理）</li>
</ul>
<p><a href="https://help.aliyun.com/knowledge_detail/148179.html" target="_blank" rel="noopener">参考连接</a></p>
]]></content>
      <categories>
        <category>博客维护</category>
      </categories>
      <tags>
        <tag>BUGs</tag>
      </tags>
  </entry>
  <entry>
    <title>语雀Front-matter-demo</title>
    <url>/posts/47397/</url>
    <content><![CDATA[<p>这是一个模板,方便在语雀中快速编写符合 Yuque-Hexo 语法得文章,按照该模板即可保证文章格式。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: CDN下访问源站ERR<span class="emphasis">_TOO_</span>MANY_REDIRECTS</span><br><span class="line">cover:</span><br><span class="line">sticky: 2</span><br><span class="line">date: 2020-12-21</span><br><span class="line">updated:</span><br><span class="line">tags: [BUGs]</span><br><span class="line">categories: [博客维护]</span><br><span class="line">keywords: "重定向,ERROR,CDN,REDIRECTS"</span><br><span class="line">toc: True</span><br><span class="line">abbrlink:</span><br><span class="line">description: 这是一个模板,方便在语雀中快速编写符合Yuque-Hexo语法得文章,按照该模板即可保证文章格式。</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>引入外部图片测试（语雀）<br><a href="https://cdn.jsdelivr.net/gh/0x7b/CDN/img/65033404_p0.jpg" target="_blank" rel="noopener"><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/yuque/0/2020/jpeg/8398873/1608800119701-0aee20c6-8ea4-4ca2-959d-55ad5078c77c.jpeg#align=left&display=inline&height=1414&margin=%5Bobject%20Object%5D&originHeight=1414&originWidth=2000&size=0&status=done&style=none&width=2000" alt=""></a><br>目前看来还是会受防盗链的影响，<br><a href="https://github.com/x-cold/yuque-hexo/issues/41" target="_blank" rel="noopener">解决办法</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"referrer"</span> <span class="attr">content</span>=<span class="string">"no-referrer"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>可直接在语雀中添加，即可为这篇文章 no-referrer 属性<br>但这个解决方法也具有局限性：只能在 Chrome 浏览器中生效</p>
]]></content>
      <categories>
        <category>博客维护</category>
      </categories>
      <tags>
        <tag>BUGs</tag>
      </tags>
  </entry>
</search>
